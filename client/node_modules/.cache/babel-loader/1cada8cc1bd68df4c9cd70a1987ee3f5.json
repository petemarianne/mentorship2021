{"ast":null,"code":"var _jsxFileName = \"/Users/petemarianne/WebstormProjects/DogShop/src/pages/Profile/Profile.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './Profile.scss';\nimport { IconButton, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow } from '@material-ui/core';\nimport { db } from '../../firebase';\nimport { useScreenSize } from '../../hooks/useScreenSize';\nimport { toDate } from '../../utils/toDate';\nimport { Archive, Unarchive } from '@material-ui/icons';\nimport SellIcon from '@mui/icons-material/Sell';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Profile = ({\n  myProfile\n}) => {\n  _s();\n\n  const [adsData, setAdsData] = useState([]);\n  const [user, setUser] = useState({});\n  const [userDate, setUserDate] = useState(new Date());\n  const {\n    id\n  } = useParams();\n  const [rerender, setRerender] = useState(0);\n  const [page, setPage] = React.useState(0);\n\n  const fetchAds = async id => {\n    const adsCollection = await db.collection('dogAds').where('sellerID', '==', id).get();\n    const ads = adsCollection.docs.map(doc => {\n      return { ...doc.data(),\n        docID: doc.id\n      };\n    }).sort((item1, item2) => {\n      return item2.date - item1.date;\n    });\n    return Promise.resolve(ads);\n  };\n\n  const fetchUser = async () => {\n    const usersCollection = await db.collection('users').where('id', '==', myProfile ? 'seller1' : `seller${id}`).get();\n    const user = usersCollection.docs.map(doc => {\n      return doc.data();\n    })[0];\n    return Promise.resolve(user);\n  };\n\n  useEffect(() => {\n    fetchUser().then(response1 => {\n      setUser(response1);\n      setUserDate(toDate(response1.date));\n      fetchAds(response1.id).then(response2 => {\n        setAdsData(response2);\n      });\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [rerender]);\n  const {\n    desktop\n  } = useScreenSize();\n  const columns = [{\n    id: 'title',\n    label: 'Title',\n    minWidth: 50,\n    align: 'center'\n  }, {\n    id: 'publication-date',\n    label: 'Publication date',\n    minWidth: 50,\n    align: 'center'\n  }, {\n    id: 'sale-date',\n    label: 'Sale date',\n    minWidth: 50,\n    align: 'center'\n  }, {\n    id: 'closing-date',\n    label: 'Closing date',\n    minWidth: 50,\n    align: 'center'\n  }, {\n    id: 'status',\n    label: 'Status',\n    minWidth: 40,\n    align: 'center'\n  }, {\n    id: 'price',\n    label: 'Price',\n    minWidth: 40,\n    align: 'center'\n  }];\n\n  if (myProfile) {\n    columns.push({\n      id: 'action',\n      label: 'Action',\n      minWidth: 80,\n      align: 'center'\n    });\n  }\n\n  const dateCell = date => {\n    return /*#__PURE__*/_jsxDEV(TableCell, {\n      size: \"medium\",\n      align: \"center\",\n      children: date === null || date === void 0 ? void 0 : date.toDate().toLocaleString('default', {\n        day: 'numeric',\n        month: 'short',\n        year: 'numeric',\n        hour: 'numeric',\n        minute: 'numeric'\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this);\n  };\n\n  const activate = async ad => {\n    await db.collection('dogAds').doc(ad.docID).set({ ...ad,\n      status: 'active',\n      closingDate: null\n    });\n    await db.collection('users').doc(user.name).set({ ...user,\n      activeAds: user.activeAds + 1\n    });\n  };\n\n  const close = async ad => {\n    await db.collection('dogAds').doc(ad.docID).set({ ...ad,\n      status: 'closed',\n      closingDate: new Date()\n    });\n    await db.collection('users').doc(user.name).set({ ...user,\n      activeAds: user.activeAds - 1\n    });\n  };\n\n  const sell = async ad => {\n    await db.collection('dogAds').doc(ad.docID).set({ ...ad,\n      status: 'sold',\n      saleDate: new Date()\n    });\n    await db.collection('users').doc(user.name).set({ ...user,\n      activeAds: user.activeAds - 1\n    });\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-page\",\n    children: [desktop && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avatar\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: user.avatar,\n          alt: 'avatar'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name\",\n          children: user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"phone\",\n          children: [\"Phone number: \", user.phone]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"email\",\n          children: [\"Email: \", user.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date\",\n          children: [\"Date of registration: \", userDate.toLocaleString('default', {\n            day: 'numeric',\n            month: 'long',\n            year: 'numeric'\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }, this), !desktop && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-info-mobile\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avatar\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: user.avatar,\n          alt: 'avatar'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name\",\n        children: user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"phone\",\n        children: [\"Phone number: \", user.phone]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"email\",\n        children: [\"Email: \", user.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date\",\n        children: [\"Date of registration: \", userDate.toLocaleString('default', {\n          day: 'numeric',\n          month: 'long',\n          year: 'numeric'\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        stickyHeader: true,\n        \"aria-label\": \"sticky table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: columns.map(column => {\n              return /*#__PURE__*/_jsxDEV(TableCell, {\n                align: column.align,\n                style: {\n                  minWidth: column.minWidth\n                },\n                children: column.label\n              }, column.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: adsData.slice(page * 5, page * 5 + 5).map(row => {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              role: \"checkbox\",\n              tabIndex: -1,\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                size: \"medium\",\n                align: \"center\",\n                children: row.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 41\n              }, this), dateCell(row.date), dateCell(row.saleDate), dateCell(row.closingDate), /*#__PURE__*/_jsxDEV(TableCell, {\n                size: \"medium\",\n                align: \"center\",\n                children: row.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                size: \"medium\",\n                align: \"center\",\n                children: row.price\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 41\n              }, this), myProfile ? /*#__PURE__*/_jsxDEV(TableCell, {\n                size: \"medium\",\n                align: \"center\",\n                children: row.status === 'closed' ? /*#__PURE__*/_jsxDEV(IconButton, {\n                  \"aria-label\": \"lose\",\n                  size: \"small\",\n                  color: \"primary\",\n                  onClick: () => {\n                    activate(row).then(() => setRerender(cur => {\n                      setRerender(cur + 1);\n                    }));\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Unarchive, {\n                    fontSize: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 53\n                }, this) : row.status === 'active' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                    \"aria-label\": \"lose\",\n                    size: \"small\",\n                    color: \"primary\",\n                    onClick: () => {\n                      sell(row).then(() => setRerender(cur => {\n                        setRerender(cur + 1);\n                      }));\n                    },\n                    children: /*#__PURE__*/_jsxDEV(SellIcon, {\n                      fontSize: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 212,\n                      columnNumber: 65\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 61\n                  }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                    \"aria-label\": \"lose\",\n                    size: \"small\",\n                    color: \"primary\",\n                    onClick: () => {\n                      close(row).then(() => setRerender(cur => {\n                        setRerender(cur + 1);\n                      }));\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Archive, {\n                      fontSize: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 224,\n                      columnNumber: 65\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 214,\n                    columnNumber: 61\n                  }, this)]\n                }, void 0, true) : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 45\n              }, this) : null]\n            }, row.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      rowsPerPageOptions: [5],\n      component: \"div\",\n      count: adsData.length,\n      page: page,\n      rowsPerPage: 5,\n      onPageChange: handleChangePage,\n      className: \"table-pagination\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Profile, \"cJhn0+gGzAvOONxqWMLnYZRc3nM=\", false, function () {\n  return [useParams, useScreenSize];\n});\n\n_c = Profile;\nProfile.propTypes = {\n  myProfile: PropTypes.bool\n};\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/Users/petemarianne/WebstormProjects/DogShop/src/pages/Profile/Profile.jsx"],"names":["React","useEffect","useState","IconButton","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","db","useScreenSize","toDate","Archive","Unarchive","SellIcon","useParams","PropTypes","Profile","myProfile","adsData","setAdsData","user","setUser","userDate","setUserDate","Date","id","rerender","setRerender","page","setPage","fetchAds","adsCollection","collection","where","get","ads","docs","map","doc","data","docID","sort","item1","item2","date","Promise","resolve","fetchUser","usersCollection","then","response1","response2","desktop","columns","label","minWidth","align","push","dateCell","toLocaleString","day","month","year","hour","minute","activate","ad","set","status","closingDate","name","activeAds","close","sell","saleDate","handleChangePage","event","newPage","avatar","phone","email","column","slice","row","title","price","cur","length","propTypes","bool"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './Profile.scss';\nimport {\n    IconButton,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TablePagination,\n    TableRow\n} from '@material-ui/core';\nimport { db } from '../../firebase';\nimport { useScreenSize } from '../../hooks/useScreenSize';\nimport { toDate } from '../../utils/toDate';\nimport { Archive, Unarchive } from '@material-ui/icons';\nimport SellIcon from '@mui/icons-material/Sell';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst Profile = ({ myProfile }) => {\n    const [adsData, setAdsData] = useState([]);\n    const [user, setUser] = useState({});\n    const [userDate, setUserDate] = useState(new Date());\n    const { id } = useParams();\n    const [rerender, setRerender] = useState(0);\n    const [page, setPage] = React.useState(0);\n\n    const fetchAds = async (id) => {\n        const adsCollection = await db.collection('dogAds').where('sellerID','==', id).get();\n        const ads = adsCollection.docs\n            .map((doc) => {return {...doc.data(), docID: doc.id};})\n            .sort((item1, item2) => {return item2.date - item1.date;});\n        return Promise.resolve(ads);\n    };\n\n    const fetchUser = async () => {\n        const usersCollection = await db.collection('users').where('id', '==', myProfile ? 'seller1' : `seller${id}`).get();\n        const user = usersCollection.docs\n            .map((doc) => {return doc.data();})[0];\n        return Promise.resolve(user);\n    }\n\n    useEffect(() => {\n        fetchUser().then((response1) => {\n            setUser(response1);\n            setUserDate(toDate(response1.date))\n            fetchAds(response1.id).then((response2) => {\n                setAdsData(response2);\n            })\n        })\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [rerender]);\n\n    const {desktop} = useScreenSize();\n\n    const columns = [\n        { id: 'title', label: 'Title', minWidth: 50, align: 'center' },\n        { id: 'publication-date', label: 'Publication date', minWidth: 50, align: 'center'},\n        { id: 'sale-date', label: 'Sale date', minWidth: 50, align: 'center'},\n        { id: 'closing-date', label: 'Closing date', minWidth: 50, align: 'center'},\n        { id: 'status', label: 'Status', minWidth: 40, align: 'center'},\n        { id: 'price', label: 'Price', minWidth: 40, align: 'center'},\n    ];\n\n    if (myProfile) {\n        columns.push({ id: 'action', label: 'Action', minWidth: 80, align: 'center'});\n    }\n\n    const dateCell = (date) => {\n        return (\n            <TableCell size='medium' align='center'>\n                {date?.toDate().toLocaleString('default', {\n                    day: 'numeric',\n                    month: 'short',\n                    year: 'numeric',\n                    hour: 'numeric',\n                    minute: 'numeric'\n                })}\n            </TableCell>\n        )\n    }\n\n    const activate = async (ad) => {\n        await db.collection('dogAds').doc(ad.docID).set(\n            {\n                ...ad,\n                status: 'active',\n                closingDate: null\n            }\n        );\n        await db.collection('users').doc(user.name).set({\n            ...user,\n            activeAds: user.activeAds + 1,\n        });\n    }\n\n    const close = async (ad) => {\n        await db.collection('dogAds').doc(ad.docID).set({\n            ...ad,\n            status: 'closed',\n            closingDate: new Date()\n        });\n        await db.collection('users').doc(user.name).set({\n            ...user,\n            activeAds: user.activeAds - 1,\n        });\n    }\n\n    const sell = async (ad) => {\n        await db.collection('dogAds').doc(ad.docID).set({\n            ...ad,\n            status: 'sold',\n            saleDate: new Date()\n        });\n        await db.collection('users').doc(user.name).set({\n            ...user,\n            activeAds: user.activeAds - 1,\n        });\n    }\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    return (\n        <div className='profile-page'>\n            {desktop && (\n                <div className='profile-info'>\n                    <div className='avatar'><img src={user.avatar} alt={'avatar'}/></div>\n                    <div>\n                        <div className='name'>{user.name}</div>\n                        <div className='phone'>Phone number: {user.phone}</div>\n                        <div className='email'>Email: {user.email}</div>\n                        <div className='date'>\n                            Date of registration: {userDate.toLocaleString('default', {\n                            day: 'numeric',\n                            month: 'long',\n                            year: 'numeric'})}\n                        </div>\n                    </div>\n                </div>\n            )}\n            {!desktop && (\n                <div className='profile-info-mobile'>\n                    <div className='avatar'><img src={user.avatar} alt={'avatar'}/></div>\n                    <div className='name'>{user.name}</div>\n                    <div className='phone'>Phone number: {user.phone}</div>\n                    <div className='email'>Email: {user.email}</div>\n                    <div className='date'>Date of registration: {userDate.toLocaleString('default', {\n                        day: 'numeric',\n                        month: 'long',\n                        year: 'numeric'})}\n                    </div>\n                </div>\n            )}\n            <TableContainer>\n                <Table stickyHeader aria-label='sticky table'>\n                    <TableHead>\n                        <TableRow>\n                            {columns.map((column) => {\n                                return (\n                                    <TableCell\n                                        key={column.id}\n                                        align={column.align}\n                                        style={{minWidth: column.minWidth}}\n                                    >\n                                        {column.label}\n                                    </TableCell>\n                                );\n                            })}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {\n                            adsData.slice(page * 5, page * 5 + 5).map((row) => {\n                                return (\n                                    <TableRow role='checkbox' tabIndex={-1} key={row.id}>\n                                        <TableCell size='medium' align='center'>{row.title}</TableCell>\n                                        {dateCell(row.date)}\n                                        {dateCell(row.saleDate)}\n                                        {dateCell(row.closingDate)}\n                                        <TableCell size='medium' align='center'>{row.status}</TableCell>\n                                        <TableCell size='medium' align='center'>{row.price}</TableCell>\n                                        {myProfile ?\n                                            <TableCell size='medium' align='center'>\n                                                {row.status === 'closed' ?\n                                                    <IconButton\n                                                        aria-label='lose'\n                                                        size='small'\n                                                        color='primary'\n                                                        onClick={() => {\n                                                            activate(row).then(() => setRerender(cur => {\n                                                                setRerender(cur + 1)\n                                                            }));\n                                                        }}\n                                                    >\n                                                        <Unarchive fontSize='small'/>\n                                                    </IconButton> :\n                                                    row.status === 'active' ?\n                                                        <>\n                                                            <IconButton\n                                                                aria-label='lose'\n                                                                size='small'\n                                                                color='primary'\n                                                                onClick={() => {\n                                                                    sell(row).then(() => setRerender(cur => {\n                                                                        setRerender(cur + 1)\n                                                                    }));\n                                                                }}\n                                                            >\n                                                                <SellIcon fontSize='small'/>\n                                                            </IconButton>\n                                                            <IconButton\n                                                                aria-label='lose'\n                                                                size='small'\n                                                                color='primary'\n                                                                onClick={() => {\n                                                                    close(row).then(() => setRerender(cur => {\n                                                                        setRerender(cur + 1)\n                                                                    }));\n                                                                }}\n                                                            >\n                                                                <Archive fontSize='small'/>\n                                                            </IconButton>\n                                                        </> : null\n                                                }\n                                            </TableCell> : null\n                                        }\n                                    </TableRow>\n                                );\n                            })}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <TablePagination\n                rowsPerPageOptions={[5]}\n                component='div'\n                count={adsData.length}\n                page={page}\n                rowsPerPage={5}\n                onPageChange={handleChangePage}\n                className='table-pagination'\n            />\n        </div>\n    );\n};\n\nProfile.propTypes = {\n    myProfile: PropTypes.bool,\n};\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}