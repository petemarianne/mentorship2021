{"ast":null,"code":"var _jsxFileName = \"/Users/petemarianne/WebstormProjects/DogShop/src/pages/Profile/Profile.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './Profile.scss';\nimport { IconButton, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow } from '@material-ui/core';\nimport { useScreenSize } from '../../hooks/useScreenSize';\nimport { Archive, Unarchive } from '@material-ui/icons';\nimport SellIcon from '@mui/icons-material/Sell';\nimport { useParams } from 'react-router-dom';\nimport { fetchUsersAds, fetchUser, closeAd, sellAd, activateAd, toDate } from '../../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Profile = props => {\n  _s();\n\n  const [adsData, setAdsData] = useState([]);\n  const [user, setUser] = useState({\n    activeAds: 0,\n    avatar: '',\n    date: {\n      seconds: 0,\n      nanoseconds: 0\n    },\n    email: '',\n    id: '',\n    name: '',\n    phone: ''\n  });\n  const {\n    id\n  } = useParams();\n  const [rerender, setRerender] = useState(0);\n  const [page, setPage] = React.useState(0);\n  useEffect(() => {\n    const userPromise = props.myProfile ? fetchUser(1) : fetchUser(Number(id));\n    userPromise.then(response1 => {\n      setUser(response1);\n      fetchUsersAds(response1.id).then(response2 => {\n        setAdsData(response2);\n      });\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [rerender]);\n  const {\n    desktop\n  } = useScreenSize();\n  const columns = [{\n    id: 'title',\n    label: 'Title',\n    minWidth: 50,\n    align: 'center'\n  }, {\n    id: 'publication-date',\n    label: 'Publication date',\n    minWidth: 50,\n    align: 'center'\n  }, {\n    id: 'sale-date',\n    label: 'Sale date',\n    minWidth: 50,\n    align: 'center'\n  }, {\n    id: 'closing-date',\n    label: 'Closing date',\n    minWidth: 50,\n    align: 'center'\n  }, {\n    id: 'status',\n    label: 'Status',\n    minWidth: 40,\n    align: 'center'\n  }, {\n    id: 'price',\n    label: 'Price',\n    minWidth: 40,\n    align: 'center'\n  }];\n\n  if (props.myProfile) {\n    columns.push({\n      id: 'action',\n      label: 'Action',\n      minWidth: 80,\n      align: 'center'\n    });\n  }\n\n  const dateCell = date => {\n    return date ? /*#__PURE__*/_jsxDEV(TableCell, {\n      size: \"medium\",\n      align: \"center\",\n      children: toDate(date).toLocaleString('default', {\n        day: 'numeric',\n        month: 'short',\n        year: 'numeric',\n        hour: 'numeric',\n        minute: 'numeric'\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-page\",\n    children: [desktop && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avatar\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: user.avatar,\n          alt: 'avatar'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name\",\n          children: user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"phone\",\n          children: [\"Phone number: \", user.phone]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"email\",\n          children: [\"Email: \", user.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date\",\n          children: [\"Date of registration: \", toDate(user.date).toLocaleString('default', {\n            day: 'numeric',\n            month: 'long',\n            year: 'numeric'\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }, this), !desktop && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-info-mobile\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avatar\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: user.avatar,\n          alt: 'avatar'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name\",\n        children: user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"phone\",\n        children: [\"Phone number: \", user.phone]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"email\",\n        children: [\"Email: \", user.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date\",\n        children: [\"Date of registration: \", toDate(user.date).toLocaleString('default', {\n          day: 'numeric',\n          month: 'long',\n          year: 'numeric'\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        stickyHeader: true,\n        \"aria-label\": \"sticky table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: columns.map(column => {\n              return /*#__PURE__*/_jsxDEV(TableCell, {\n                align: column.align,\n                style: {\n                  minWidth: column.minWidth\n                },\n                children: column.label\n              }, column.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: adsData.slice(page * 5, page * 5 + 5).map(row => {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              role: \"checkbox\",\n              tabIndex: -1,\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                size: \"medium\",\n                align: \"center\",\n                children: row.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 41\n              }, this), dateCell(row.date), dateCell(row.saleDate), dateCell(row.closingDate), /*#__PURE__*/_jsxDEV(TableCell, {\n                size: \"medium\",\n                align: \"center\",\n                children: row.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                size: \"medium\",\n                align: \"center\",\n                children: row.price\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 41\n              }, this), props.myProfile ? /*#__PURE__*/_jsxDEV(TableCell, {\n                size: \"medium\",\n                align: \"center\",\n                children: row.status === 'closed' ? /*#__PURE__*/_jsxDEV(IconButton, {\n                  \"aria-label\": \"lose\",\n                  size: \"small\",\n                  color: \"primary\",\n                  onClick: () => {\n                    activateAd(row, user).then(() => {\n                      setRerender(cur => cur + 1);\n                    });\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Unarchive, {\n                    fontSize: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 53\n                }, this) : row.status === 'active' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                    \"aria-label\": \"lose\",\n                    size: \"small\",\n                    color: \"primary\",\n                    onClick: () => {\n                      sellAd(row, user).then(() => {\n                        setRerender(cur => cur + 1);\n                      });\n                    },\n                    children: /*#__PURE__*/_jsxDEV(SellIcon, {\n                      fontSize: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 170,\n                      columnNumber: 65\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 61\n                  }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                    \"aria-label\": \"lose\",\n                    size: \"small\",\n                    color: \"primary\",\n                    onClick: () => {\n                      closeAd(row, user).then(() => {\n                        setRerender(cur => cur + 1);\n                      });\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Archive, {\n                      fontSize: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 182,\n                      columnNumber: 65\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 61\n                  }, this)]\n                }, void 0, true) : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 45\n              }, this) : null]\n            }, row.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      rowsPerPageOptions: [5],\n      component: \"div\",\n      count: adsData.length,\n      page: page,\n      rowsPerPage: 5,\n      onPageChange: handleChangePage,\n      className: \"table-pagination\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Profile, \"ylvxKuNMusHr9MtqWe6BD6365JM=\", false, function () {\n  return [useParams, useScreenSize];\n});\n\n_c = Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/Users/petemarianne/WebstormProjects/DogShop/src/pages/Profile/Profile.tsx"],"names":["React","useEffect","useState","IconButton","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","useScreenSize","Archive","Unarchive","SellIcon","useParams","fetchUsersAds","fetchUser","closeAd","sellAd","activateAd","toDate","Profile","props","adsData","setAdsData","user","setUser","activeAds","avatar","date","seconds","nanoseconds","email","id","name","phone","rerender","setRerender","page","setPage","userPromise","myProfile","Number","then","response1","response2","desktop","columns","label","minWidth","align","push","dateCell","toLocaleString","day","month","year","hour","minute","handleChangePage","event","newPage","map","column","slice","row","title","saleDate","closingDate","status","price","cur","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './Profile.scss';\nimport { IconButton, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow } from '@material-ui/core';\nimport { useScreenSize } from '../../hooks/useScreenSize';\nimport { Archive, Unarchive } from '@material-ui/icons';\nimport SellIcon from '@mui/icons-material/Sell';\nimport { useParams } from 'react-router-dom';\nimport { fetchUsersAds, fetchUser, closeAd, sellAd, activateAd, toDate } from '../../utils';\nimport { Ad, NumericDate, User } from '../../interfaces';\n\ninterface ProfileProps {\n    myProfile?: boolean,\n}\n\ninterface Column {\n    id: string,\n    label: string,\n    minWidth: number,\n    align: 'center' | 'left' | 'right' | 'justify' | 'inherit' | undefined,\n}\n\nexport const Profile: React.FC<ProfileProps> = (props): JSX.Element => {\n    const [adsData, setAdsData] = useState<Ad[]>([]);\n    const [user, setUser] = useState<User>({\n        activeAds: 0,\n        avatar: '',\n        date: {\n            seconds: 0,\n            nanoseconds: 0,\n        },\n        email: '',\n        id: '',\n        name: '',\n        phone: '',\n    });\n    const { id } = useParams<{id: string}>();\n    const [rerender, setRerender] = useState(0);\n    const [page, setPage] = React.useState<number>(0);\n\n    useEffect(() => {\n        const userPromise = props.myProfile ? fetchUser(1) : fetchUser(Number(id));\n        userPromise.then((response1) => {\n            setUser(response1);\n            fetchUsersAds(response1.id).then((response2) => {\n                setAdsData(response2);\n            })\n        })\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [rerender]);\n\n    const {desktop} = useScreenSize();\n\n    const columns: Column[] = [\n        { id: 'title', label: 'Title', minWidth: 50, align: 'center' },\n        { id: 'publication-date', label: 'Publication date', minWidth: 50, align: 'center'},\n        { id: 'sale-date', label: 'Sale date', minWidth: 50, align: 'center'},\n        { id: 'closing-date', label: 'Closing date', minWidth: 50, align: 'center'},\n        { id: 'status', label: 'Status', minWidth: 40, align: 'center'},\n        { id: 'price', label: 'Price', minWidth: 40, align: 'center'},\n    ];\n\n    if (props.myProfile) {\n        columns.push({ id: 'action', label: 'Action', minWidth: 80, align: 'center'});\n    }\n\n    const dateCell = (date: NumericDate | undefined): JSX.Element => {\n            return date ?\n                <TableCell size='medium' align='center'>\n                    {toDate(date).toLocaleString('default', {\n                        day: 'numeric',\n                        month: 'short',\n                        year: 'numeric',\n                        hour: 'numeric',\n                        minute: 'numeric'\n                    })}\n                </TableCell> :\n            <TableCell/>;\n    };\n\n    const handleChangePage = (event: React.MouseEvent<HTMLButtonElement, MouseEvent> | null, newPage: number): void => {\n        setPage(newPage);\n    };\n\n    return (\n        <div className='profile-page'>\n            {desktop && (\n                <div className='profile-info'>\n                    <div className='avatar'><img src={user.avatar} alt={'avatar'}/></div>\n                    <div>\n                        <div className='name'>{user.name}</div>\n                        <div className='phone'>Phone number: {user.phone}</div>\n                        <div className='email'>Email: {user.email}</div>\n                        <div className='date'>\n                            Date of registration: {toDate(user.date).toLocaleString('default', {\n                            day: 'numeric',\n                            month: 'long',\n                            year: 'numeric'})}\n                        </div>\n                    </div>\n                </div>\n            )}\n            {!desktop && (\n                <div className='profile-info-mobile'>\n                    <div className='avatar'><img src={user.avatar} alt={'avatar'}/></div>\n                    <div className='name'>{user.name}</div>\n                    <div className='phone'>Phone number: {user.phone}</div>\n                    <div className='email'>Email: {user.email}</div>\n                    <div className='date'>Date of registration: {toDate(user.date).toLocaleString('default', {\n                        day: 'numeric',\n                        month: 'long',\n                        year: 'numeric'})}\n                    </div>\n                </div>\n            )}\n            <TableContainer>\n                <Table stickyHeader aria-label='sticky table'>\n                    <TableHead>\n                        <TableRow>\n                            {columns.map((column) => {\n                                return (\n                                    <TableCell\n                                        key={column.id}\n                                        align={column.align}\n                                        style={{minWidth: column.minWidth}}\n                                    >\n                                        {column.label}\n                                    </TableCell>\n                                );\n                            })}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {\n                            adsData.slice(page * 5, page * 5 + 5).map((row) => {\n                                return (\n                                    <TableRow role='checkbox' tabIndex={-1} key={row.id}>\n                                        <TableCell size='medium' align='center'>{row.title}</TableCell>\n                                        {dateCell(row.date)}\n                                        {dateCell(row.saleDate)}\n                                        {dateCell(row.closingDate)}\n                                        <TableCell size='medium' align='center'>{row.status}</TableCell>\n                                        <TableCell size='medium' align='center'>{row.price}</TableCell>\n                                        {props.myProfile ?\n                                            <TableCell size='medium' align='center'>\n                                                {row.status === 'closed' ?\n                                                    <IconButton\n                                                        aria-label='lose'\n                                                        size='small'\n                                                        color='primary'\n                                                        onClick={() => {\n                                                            activateAd(row, user).then(() => {\n                                                                setRerender(cur => (cur + 1));\n                                                            });\n                                                        }}\n                                                    >\n                                                        <Unarchive fontSize='small'/>\n                                                    </IconButton> :\n                                                    row.status === 'active' ?\n                                                        <>\n                                                            <IconButton\n                                                                aria-label='lose'\n                                                                size='small'\n                                                                color='primary'\n                                                                onClick={() => {\n                                                                    sellAd(row, user).then(() => {\n                                                                        setRerender(cur => (cur + 1));\n                                                                    });\n                                                                }}\n                                                            >\n                                                                <SellIcon fontSize='small'/>\n                                                            </IconButton>\n                                                            <IconButton\n                                                                aria-label='lose'\n                                                                size='small'\n                                                                color='primary'\n                                                                onClick={() => {\n                                                                    closeAd(row, user).then(() => {\n                                                                        setRerender(cur => (cur + 1));\n                                                                    });\n                                                                }}\n                                                            >\n                                                                <Archive fontSize='small'/>\n                                                            </IconButton>\n                                                        </> : null\n                                                }\n                                            </TableCell> : null\n                                        }\n                                    </TableRow>\n                                );\n                            })}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <TablePagination\n                rowsPerPageOptions={[5]}\n                component='div'\n                count={adsData.length}\n                page={page}\n                rowsPerPage={5}\n                onPageChange={handleChangePage}\n                className='table-pagination'\n            />\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}